package main.java.problems;

import main.java.main.Problem;
import main.java.main.annotations.Solved;

import java.math.BigInteger;

/*
What is the index of the first term in the Fibonacci sequence to contain 1000 digits?
 */

@Solved
public class _025 extends Problem {

    public static void main(String[] args) {

        Problem p = new _025();
        p.run();

        p.printAnswer();
        System.out.println(p.answer());

    }

    public void run() {
        double count = 0;
        BigInteger solution = new BigInteger
        BigInteger tertiary = BigInteger.valueOf(1);
        BigInteger first = BigInteger.valueOf(1);
        BigInteger second = BigInteger.valueOf(1);

        while (tertiary.compareTo(solution)<1) {

            tertiary = first;
            first = second;
            second = tertiary.add(second);
            count++;
        }

        //	System.out.print(second);

        this.answer = count;
    }
}
